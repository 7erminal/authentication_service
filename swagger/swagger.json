{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API\n",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/auth/change-password/{id}": {
            "put": {
                "tags": [
                    "auth"
                ],
                "description": "Change user password\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Change Password",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Change password content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/log-out": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Logout User\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Log Out",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.TokenDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Login User\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthenticationDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/login/token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Login\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Login User",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthenticationDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/resend-otp": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Resend OTP using username\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Resend OTP",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SignUp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.UsernameDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/reset-password-link/{id}": {
            "put": {
                "tags": [
                    "auth"
                ],
                "description": "Reset user password link\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Reset Password Link",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Change password content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.ResetPasswordLink"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/reset-password/{id}": {
            "put": {
                "tags": [
                    "auth"
                ],
                "description": "Reset user password\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Reset Password",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Change password content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.ResetPassword"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/send-activation-code": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Send Activation Code\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Send Activation Code",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SignUp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.SendActivationCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.StringResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/token/check": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Check Token Expiry\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Check token expiry",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.StringRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.StringResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/token/invite": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Generate invite Token\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Generate invite token",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.EncryptInviteRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.InviteHashResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/token/invite/verify": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Check Token Expiry\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Check invite token validity",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Authentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.DecryptRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.InviteDecodeResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/verify-activation-code": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Verify Activation code\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Verify Activation Code",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Verify OTP content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.VerifyActivationCodeDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responsesDTOs.StringResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/verify-otp": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Verify OTP using username\n\u003cbr\u003e",
                "operationId": "AuthenticationController.Verify OTP",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Verify OTP content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.VerifyOtpDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/requestsDTOs.UserResponseDTO"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/oauth/google/authorize": {
            "get": {
                "tags": [
                    "oauth"
                ],
                "description": "create OAuthAuthentication\n\u003cbr\u003e",
                "operationId": "OAuthAuthenticationController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OAuthAuthentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OAuthAuthentication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OAuthAuthentication"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/oauth/third-party/login": {
            "get": {
                "tags": [
                    "oauth"
                ],
                "description": "create OAuthAuthentication\n\u003cbr\u003e",
                "operationId": "OAuthAuthenticationController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OAuthAuthentication content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OAuthAuthentication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OAuthAuthentication"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthenticationDTO": {
            "title": "AuthenticationDTO",
            "type": "object",
            "properties": {
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "models.Branches": {
            "title": "Branches",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "Branch": {
                    "type": "string"
                },
                "BranchId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Country": {
                    "$ref": "#/definitions/models.Countries"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Location": {
                    "type": "string"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "PhoneNumber": {
                    "type": "string"
                }
            }
        },
        "models.Countries": {
            "title": "Countries",
            "type": "object",
            "properties": {
                "Country": {
                    "type": "string"
                },
                "CountryCode": {
                    "type": "string"
                },
                "CountryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "DefaultCurrency": {
                    "$ref": "#/definitions/models.Currencies"
                },
                "Description": {
                    "type": "string"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Currencies": {
            "title": "Currencies",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Currency": {
                    "type": "string"
                },
                "CurrencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Symbol": {
                    "type": "string"
                }
            }
        },
        "models.OAuthAuthentication": {
            "title": "OAuthAuthentication",
            "type": "object"
        },
        "models.Roles": {
            "title": "Roles",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Description": {
                    "type": "string"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Role": {
                    "type": "string"
                },
                "RoleId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Shops": {
            "title": "Shops",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Image": {
                    "type": "string"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "ShopAssistantName": {
                    "type": "string"
                },
                "ShopAssistantNumber": {
                    "type": "string"
                },
                "ShopDescription": {
                    "type": "string"
                },
                "ShopId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ShopName": {
                    "type": "string"
                }
            }
        },
        "models.UserExtraDetails": {
            "title": "UserExtraDetails",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "Branch": {
                    "$ref": "#/definitions/models.Branches"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nickname": {
                    "type": "string"
                },
                "Shop": {
                    "$ref": "#/definitions/models.Shops"
                },
                "User": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserDetailsId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.UserResponseDTO": {
            "title": "UserResponseDTO",
            "type": "object"
        },
        "models.UserTokens": {
            "title": "UserTokens",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "ExpiryDate": {
                    "type": "string",
                    "format": "datetime"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nonce": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "UserTokenId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Users": {
            "title": "Users",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "integer",
                    "format": "int64"
                },
                "Address": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "DateCreated": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Dob": {
                    "type": "string",
                    "format": "datetime"
                },
                "Email": {
                    "type": "string"
                },
                "FullName": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "IdNumber": {
                    "type": "string"
                },
                "IdType": {
                    "type": "string"
                },
                "ImagePath": {
                    "type": "string"
                },
                "IsVerified": {
                    "type": "boolean"
                },
                "MaritalStatus": {
                    "type": "string"
                },
                "ModifiedBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Role": {
                    "$ref": "#/definitions/models.Roles"
                },
                "UserDetails": {
                    "$ref": "#/definitions/models.UserExtraDetails"
                },
                "UserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserType": {
                    "type": "integer",
                    "format": "int64"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.ChangePassword": {
            "title": "ChangePassword",
            "type": "object",
            "properties": {
                "NewPassword": {
                    "type": "string"
                },
                "OldPassword": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.DecryptRequestDTO": {
            "title": "DecryptRequestDTO",
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Nonce": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.EncryptInviteRequestDTO": {
            "title": "EncryptInviteRequestDTO",
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.ResetPassword": {
            "title": "ResetPassword",
            "type": "object",
            "properties": {
                "NewPassword": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.ResetPasswordLink": {
            "title": "ResetPasswordLink",
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.SendActivationCode": {
            "title": "SendActivationCode",
            "type": "object",
            "properties": {
                "MobileNumber": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.StringRequestDTO": {
            "title": "StringRequestDTO",
            "type": "object",
            "properties": {
                "Value": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.TokenDTO": {
            "title": "TokenDTO",
            "type": "object",
            "properties": {
                "Token": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.UserResponseDTO": {
            "title": "UserResponseDTO",
            "type": "object"
        },
        "requestsDTOs.UsernameDTO": {
            "title": "UsernameDTO",
            "type": "object",
            "properties": {
                "Username": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.VerifyActivationCodeDTO": {
            "title": "VerifyActivationCodeDTO",
            "type": "object",
            "properties": {
                "MobileNumber": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "requestsDTOs.VerifyOtpDTO": {
            "title": "VerifyOtpDTO",
            "type": "object",
            "properties": {
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "responsesDTOs.InviteDecodeResponseDTO": {
            "title": "InviteDecodeResponseDTO",
            "type": "object",
            "properties": {
                "StatusCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "StatusDesc": {
                    "type": "string"
                },
                "Value": {
                    "$ref": "#/definitions/responsesDTOs.TokenDestructureResponseDTO"
                }
            }
        },
        "responsesDTOs.InviteHashDTO": {
            "title": "InviteHashDTO",
            "type": "object",
            "properties": {
                "Token": {
                    "$ref": "#/definitions/models.UserTokens"
                }
            }
        },
        "responsesDTOs.InviteHashResponseDTO": {
            "title": "InviteHashResponseDTO",
            "type": "object",
            "properties": {
                "StatusCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "StatusDesc": {
                    "type": "string"
                },
                "Value": {
                    "$ref": "#/definitions/responsesDTOs.InviteHashDTO"
                }
            }
        },
        "responsesDTOs.StringResponseDTO": {
            "title": "StringResponseDTO",
            "type": "object",
            "properties": {
                "StatusCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "StatusDesc": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "responsesDTOs.TokenDestructureResponseDTO": {
            "title": "TokenDestructureResponseDTO",
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "RoleId": {
                    "type": "string"
                }
            }
        },
        "responsesDTOs.UserResponseDTO": {
            "title": "UserResponseDTO",
            "type": "object",
            "properties": {
                "StatusCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "StatusDesc": {
                    "type": "string"
                },
                "User": {
                    "$ref": "#/definitions/models.Users"
                }
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "AuthenticationController operations for Authentication\n"
        },
        {
            "name": "oauth",
            "description": "OAuthAuthenticationController operations for OAuthAuthentication\n"
        }
    ]
}