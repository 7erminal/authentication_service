swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /auth/login:
    post:
      tags:
      - auth
      description: |-
        Login
        <br>
      operationId: AuthenticationController.Create
      parameters:
      - in: body
        name: body
        description: body for Authentication content
        required: true
        schema:
          $ref: '#/definitions/models.AuthenticationDTO'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.UserResponseDTO'
        "403":
          description: body is empty
  /auth/resend-otp:
    post:
      tags:
      - auth
      description: |-
        Resend OTP using username
        <br>
      operationId: AuthenticationController.Resend OTP
      parameters:
      - in: body
        name: body
        description: body for SignUp content
        required: true
        schema:
          $ref: '#/definitions/requestsDTOs.UsernameDTO'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/responsesDTOs.UserResponseDTO'
        "403":
          description: body is empty
  /auth/verify-otp:
    post:
      tags:
      - auth
      description: |-
        Verify OTP using username
        <br>
      operationId: AuthenticationController.Verify OTP
      parameters:
      - in: body
        name: body
        description: body for Verify OTP content
        required: true
        schema:
          $ref: '#/definitions/requestsDTOs.VerifyOtpDTO'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/requestsDTOs.UserResponseDTO'
        "403":
          description: body is empty
  /oauth/google/authorize:
    get:
      tags:
      - oauth
      description: |-
        create OAuthAuthentication
        <br>
      operationId: OAuthAuthenticationController.Create
      parameters:
      - in: body
        name: body
        description: body for OAuthAuthentication content
        required: true
        schema:
          $ref: '#/definitions/models.OAuthAuthentication'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.OAuthAuthentication'
        "403":
          description: body is empty
  /oauth/third-party/login:
    get:
      tags:
      - oauth
      description: |-
        create OAuthAuthentication
        <br>
      operationId: OAuthAuthenticationController.Create
      parameters:
      - in: body
        name: body
        description: body for OAuthAuthentication content
        required: true
        schema:
          $ref: '#/definitions/models.OAuthAuthentication'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.OAuthAuthentication'
        "403":
          description: body is empty
definitions:
  models.AuthenticationDTO:
    title: AuthenticationDTO
    type: object
    properties:
      Password:
        type: string
      Username:
        type: string
  models.OAuthAuthentication:
    title: OAuthAuthentication
    type: object
  models.UserResponseDTO:
    title: UserResponseDTO
    type: object
  models.Users:
    title: Users
    type: object
    properties:
      Active:
        type: integer
        format: int64
      Address:
        type: string
      CreatedBy:
        type: integer
        format: int64
      DateCreated:
        type: string
        format: datetime
      DateModified:
        type: string
        format: datetime
      Dob:
        type: string
        format: datetime
      Email:
        type: string
      FullName:
        type: string
      Gender:
        type: string
      IdNumber:
        type: string
      IdType:
        type: string
      IsVerified:
        type: boolean
      MaritalStatus:
        type: string
      ModifiedBy:
        type: integer
        format: int64
      Password:
        type: string
      PhoneNumber:
        type: string
      UserId:
        type: integer
        format: int64
      UserType:
        type: integer
        format: int64
      Username:
        type: string
  requestsDTOs.UserResponseDTO:
    title: UserResponseDTO
    type: object
  requestsDTOs.UsernameDTO:
    title: UsernameDTO
    type: object
    properties:
      Username:
        type: string
  requestsDTOs.VerifyOtpDTO:
    title: VerifyOtpDTO
    type: object
    properties:
      Password:
        type: string
      Username:
        type: string
  responsesDTOs.UserResponseDTO:
    title: UserResponseDTO
    type: object
    properties:
      StatusCode:
        type: integer
        format: int64
      StatusDesc:
        type: string
      User:
        $ref: '#/definitions/models.Users'
tags:
- name: auth
  description: |
    AuthenticationController operations for Authentication
- name: oauth
  description: |
    OAuthAuthenticationController operations for OAuthAuthentication
